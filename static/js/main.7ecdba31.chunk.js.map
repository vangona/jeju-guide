{"version":3,"sources":["fBase.js","routes/Auth.js","routes/Detail.js","components/List.js","components/Map.js","routes/Home.js","routes/MyPlace.js","components/PostForm.js","routes/Post.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","icon","faExchangeAlt","Detail","location","useLocation","place","state","from","history","useHistory","imgPage","setImgPage","src","attachmentUrlArray","style","maxHeight","alt","length","lenth","description","push","pathname","prevViewType","List","places","localArray","isMobile","setValue","setType","onTypeChange","filter","map","index","includes","addressDetail","backgroundColor","some","localPlace","to","defaultChecked","htmlFor","Map","detail","setDetail","mouseState","setMouseState","container","useRef","makeMarker","content","document","createElement","innerHTML","position","kakao","maps","LatLng","geocode","overlay","CustomOverlay","yAnchor","marker","Marker","addListener","setMap","clickMobileHandler","callback","addEventListener","attachEvent","addEventHandle","clickOverlayHandler","clickHandler","mouseOverHandler","mouseOutHandler","useEffect","level","options","center","window","current","makeMap","ref","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","locPosition","displayMarker","alert","faLocationArrow","width","height","url","href","rel","Home","loading","setLoading","setPlaces","viewType","setViewType","JSON","parse","localStorage","getItem","getPlaces","collection","onSnapshot","snapshot","placeArray","docs","doc","id","data","undefined","MyPlace","myPlaceArray","setMyPlaceArray","localMyPlace","myPlace","PostForm","userObj","setName","extraAddress","setExtraAddress","setGeocode","setDescription","attachmentArray","setAttachmentArray","setUrl","address","setAddress","setAddressDetail","isOpenPost","setIsOpenPost","geocoder","services","Geocoder","i","attachmentRef","child","uid","uuidv4","putString","response","getDownloadURL","placeObj","creatorId","add","onAttachmentChange","files","fileArray","maxSizeMB","maxWidthOrHeight","resultArray","imageCompression","compressedFile","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","console","log","makeGeocode","status","Status","OK","geocodeArray","y","x","onCompletePost","fullAddr","extraAddr","addressType","bname","buildingName","zonecode","addressSearch","autoClose","onComplete","readOnly","accept","multiple","nmae","Post","signOut","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","setIsMobile","userAgent","onAuthStateChanged","user","match","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ecdba31.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDbt76_Zwf7Pnx-cBDVxe6oDWnv32v9xqo\",\r\n  authDomain: \"jeju-guide.firebaseapp.com\",\r\n  projectId: \"jeju-guide\",\r\n  storageBucket: \"jeju-guide.appspot.com\",\r\n  messagingSenderId: \"350907878366\",\r\n  appId: \"1:350907878366:web:2f3fcda2d82f9ab4602b4f\",\r\n  measurementId: \"G-2F62EPJ668\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\")\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        let data;\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n                setError(\"입력하신 아이디가 없습니다.\")\r\n            } else {\r\n                setError(error.message)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n    return (\r\n        <>\r\n            <div className=\"auth-form__container\">\r\n                <form className=\"auth-form\" onSubmit={onSubmit}>\r\n                    <label className=\"auth-form__title\">미슐탱 가이드</label>\r\n                    <input className=\"input auth__input\" name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                    <input className=\"input auth__input\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                    <input className=\"btn\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                    <span className=\"error\">{error}</span>\r\n                    <span className=\"change-btn\" onClick={toggleAccount}>\r\n                        <FontAwesomeIcon icon={faExchangeAlt} className=\"change-btn__logo\" />\r\n                        {newAccount? \"Log In\" : \"Create Account\"}\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;","import AddMyPlace from \"components/AddMyPlace\";\r\nimport React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Detail = () => {\r\n    const location = useLocation();\r\n    const { state : { place } } = location;\r\n    const { state: { from } } = location;\r\n    const history = useHistory();\r\n    const [imgPage, setImgPage] = useState(0);\r\n\r\n    const clickBackBtn = () => {\r\n        history.push({\r\n            pathname: \"/\",\r\n            state: {\r\n                prevViewType: from\r\n            }\r\n        })\r\n    }\r\n\r\n    const clickNextImg = () => {\r\n        if (imgPage < 4) {\r\n            setImgPage(prev => prev + 1);\r\n        }\r\n    }\r\n\r\n    const clickPrevImg = () => {\r\n        if (imgPage > 0) {\r\n            setImgPage(prev => prev - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"detail__container\">\r\n            <div>{place.name}</div>\r\n            <img src={place.attachmentUrlArray[imgPage]} style={{maxHeight:\"300px\"}} alt=\"detail-img\"/>\r\n            <div className=\"map-detail__img-btn__container\">\r\n                {imgPage !== 0 && <button className=\"map-detail__img-btn prev\" onClick={clickPrevImg}>◀</button>}\r\n                {imgPage !== place.attachmentUrlArray.length -1 & place.attachmentUrlArray.lenth !== 1 && <button className=\"map-detail__img-btn next\" onClick={clickNextImg}>▶</button>}\r\n            </div>\r\n            <p>{place.description}</p>\r\n            {/* <AddMyPlace place={place}/> */}\r\n            <button onClick={clickBackBtn}>Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddMyPlace from \"./AddMyPlace\";\r\n\r\nconst List = ({places, localArray, isMobile}) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [type, setType] = useState(\"전체\");\r\n    const onChange = (event) => {\r\n        const {target : {value} } = event;\r\n        setValue(value);\r\n    }\r\n    const onTypeChange = (event) => {\r\n        const {target : { value } } = event;\r\n        setType(value)\r\n    }\r\n    return (\r\n        <div className=\"list__container\">\r\n            <h5 className=\"list__title\">자세히 알고싶다면 장소명을 클릭해주세요.</h5>\r\n            <table className=\"list__table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>이름</th>\r\n                    <th>주소</th>\r\n                    {!isMobile && <th>설명</th>}\r\n                    {/* <th>추가</th> */}\r\n                </tr>\r\n            </thead>\r\n            {places.filter(place=>{return (place.type === type | type === \"전체\")}).map((place, index) => {\r\n                return (\r\n                    <tbody key={index}>\r\n                        {place.name.includes(value) | place.addressDetail.includes(value) | place.description.includes(value)\r\n                        ? (<tr style={localArray === null \r\n                                ? (\r\n                                    {backgroundColor:\"white\"}\r\n                                ) : (\r\n                                    localArray.some(localPlace => localPlace.name === place.name)\r\n                                    ? {backgroundColor:\"wheat\"}\r\n                                    : {backgroundColor:\"white\"}\r\n                                )}>\r\n                                <td className=\"list__table-name\">\r\n                                    <Link to={{\r\n                                        pathname: \"/detail\",\r\n                                        state: {\r\n                                            from: \"목록\",\r\n                                            place\r\n                                        }\r\n                                    }}>\r\n                                    {place.name}\r\n                                    </Link>\r\n                                </td>\r\n                                <td>{place.addressDetail}</td>\r\n                                {!isMobile && <td>{place.description}</td>}\r\n                                {/* <td><AddMyPlace place={place}/></td> */}\r\n                            </tr>\r\n                        ) : (null)\r\n                        }\r\n                    </tbody>\r\n                )\r\n            })}\r\n            </table>\r\n            <div className=\"list-search__container\">\r\n                {isMobile\r\n                        ? (\r\n                            <select className=\"place-type__list\" name=\"input__place-type\" onChange={onTypeChange} >\r\n                                <option value=\"전체\">전체</option>\r\n                                <option value=\"맛집\">맛집</option>\r\n                                <option value=\"카페 & 베이커리\">카페 & 베이커리</option>\\\r\n                                <option value=\"풍경\">풍경</option>\r\n                                <option value=\"술집\">술집</option>\r\n                                <option value=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</option>\r\n                            </select>\r\n                        ) : (\r\n                        <div className=\"list-radio__container\">\r\n                                <input type=\"radio\" name=\"input__place-type\" value=\"전체\" defaultChecked onChange={onTypeChange}/><label htmlFor=\"전체\">전체</label>\r\n                                <input type=\"radio\" name=\"input__place-type\" value=\"맛집\" onChange={onTypeChange}/><label htmlFor=\"맛집\">맛집</label>\r\n                                <input type=\"radio\" name=\"input__place-type\" value=\"카페 & 베이커리\" onChange={onTypeChange}/><label htmlFor=\"카페 & 베이커리\">카페 & 베이커리</label>\r\n                                <input type=\"radio\" name=\"input__place-type\" value=\"풍경\" onChange={onTypeChange}/><label htmlFor=\"풍경\">풍경</label>\r\n                                <input type=\"radio\" name=\"input__place-type\" value=\"술집\" onChange={onTypeChange}/><label htmlFor=\"술집\">술집</label>\r\n                                <input type=\"radio\" name=\"input__place-type\" value=\"그 외 가볼만한 곳\" onChange={onTypeChange}/><label htmlFor=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</label>\r\n                        </div>\r\n                        )}\r\n                <input type=\"text\" onChange={onChange} value={value} placeholder=\"장소명, 주소, 설명...\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import { faLocationArrow } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n/* global kakao */\r\n\r\nconst Map = ({places, isMobile}) => {\r\n    const history = useHistory();\r\n    const [type, setType] = useState(\"전체\");\r\n    const [detail, setDetail] = useState(null);\r\n    const [imgPage, setImgPage] = useState(0);\r\n    const [mouseState, setMouseState] = useState(false);\r\n    const container = useRef(null);\r\n    let map = {};\r\n\r\n    const clickNextImg = () => {\r\n        if (imgPage < 4) {\r\n            setImgPage(prev => prev + 1);\r\n        }\r\n    }\r\n\r\n    const clickPrevImg = () => {\r\n        if (imgPage > 0) {\r\n            setImgPage(prev => prev - 1);\r\n        }\r\n    }\r\n\r\n    const clickHandler = (place) => {\r\n        return function () {\r\n            setDetail(place)\r\n        }\r\n    }\r\n\r\n    const clickMobileHandler = (map, overlay) => {\r\n        return function () {\r\n            overlay.setMap(map);\r\n            setMouseState(true)\r\n        }\r\n    }\r\n\r\n    const removeOverlay = (overlay) => {\r\n        return function () {\r\n            overlay.setMap(null)\r\n            setMouseState(false)\r\n        }\r\n    }\r\n\r\n    const clickOverlayHandler = (place) => {\r\n        return function () {\r\n            history.push({\r\n                pathname: \"/detail\",\r\n                state: {\r\n                    from: \"지도\",\r\n                    place\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const mouseOverHandler = (map, overlay) => {\r\n        return function () {\r\n            overlay.setMap(map);\r\n            setMouseState(true)\r\n        }\r\n    };\r\n\r\n    const mouseOutHandler = (overlay) => {\r\n        return function () {\r\n            overlay.setMap(null)\r\n            setMouseState(false)\r\n        }\r\n    };\r\n    const addEventHandle = (target, type, callback) => {\r\n        if (target.addEventListener) {\r\n            target.addEventListener(type, callback);\r\n        } else {\r\n            target.attachEvent('on' + type, callback);\r\n        }\r\n    }\r\n\r\n    const makeMarker = (place) => {\r\n        const content = document.createElement('div');\r\n        content.className = 'place__infowindow'\r\n        content.innerHTML = `${place.name}`      \r\n\r\n        const position = new kakao.maps.LatLng(place.geocode[0], place.geocode[1])\r\n        const overlay = new kakao.maps.CustomOverlay({\r\n            content,\r\n            position,\r\n            yAnchor: 2,\r\n        })\r\n        const marker = new kakao.maps.Marker({\r\n            map: map,\r\n            position\r\n        });\r\n\r\n        if (isMobile) {\r\n            kakao.maps.event.addListener(marker, 'click', clickMobileHandler(map, overlay));\r\n            addEventHandle(content, \"click\", clickOverlayHandler(place))\r\n        } else {\r\n            kakao.maps.event.addListener(marker, 'click', clickHandler(place));\r\n            kakao.maps.event.addListener(marker, 'mouseover', mouseOverHandler(map, overlay));\r\n            kakao.maps.event.addListener(marker, 'mouseout', mouseOutHandler(overlay));\r\n        }\r\n    }\r\n\r\n    const makeMap = () => {\r\n        let level = 10;\r\n        if (isMobile) {\r\n            level = 11\r\n        }\r\n        const options = {\r\n            center: new kakao.maps.LatLng(33.3817, 126.5602), //지도의 중심좌표.\r\n            level\r\n        }\r\n        map = new window.kakao.maps.Map(container.current, options);\r\n    }\r\n\r\n    const onTypeChange = (event) => {\r\n        const {target : { value } } = event;\r\n        setType(value)\r\n    }\r\n\r\n    const onClickClear = () => {\r\n        setDetail(null);\r\n    }\r\n\r\n    const onClickLocation = () => {\r\n        const displayMarker = (locPosition) => {\r\n            const marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: locPosition\r\n            })\r\n        }\r\n        if (navigator.geolocation) {\r\n    \r\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                \r\n                var lat = position.coords.latitude, // 위도\r\n                    lon = position.coords.longitude; // 경도\r\n                \r\n                var locPosition = new kakao.maps.LatLng(lat, lon) // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n                \r\n                // 마커와 인포윈도우를 표시합니다\r\n                displayMarker(locPosition);\r\n                    \r\n              });\r\n            \r\n        } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n            \r\n            alert(\"위치 정보를 이용할 수 없습니다.\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        makeMap();\r\n        places.map(place => {\r\n            if(type === \"전체\" || place.type === type) {\r\n                makeMarker(place)\r\n            }\r\n        })\r\n    }, [type]);\r\n    return (\r\n        <>\r\n            <div className=\"map__container\">\r\n                <div className=\"vertical\">\r\n                    <span className=\"map-explain__container\">{mouseState \r\n                    ? isMobile \r\n                    ? <div className=\"map-explain\">더 알아보시려면 이름을 클릭해주세요.</div> \r\n                    : <div className=\"map-explain\">더 알아보시려면 마커를 클릭해주세요.</div> \r\n                    : <div className=\"map-explain\">지도를 확대하실 수 있습니다.</div>}\r\n                    </span>\r\n                    <div className=\"map\" ref={container} ></div>\r\n                    {isMobile\r\n                    ? (\r\n                        <select className=\"place-type__map\" name=\"input__place-type\" onChange={onTypeChange} >\r\n                            <option value=\"전체\">전체</option>\r\n                            <option value=\"맛집\">맛집</option>\r\n                            <option value=\"카페 & 베이커리\">카페 & 베이커리</option>\\\r\n                            <option value=\"풍경\">풍경</option>\r\n                            <option value=\"술집\">술집</option>\r\n                            <option value=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</option>\r\n                        </select>\r\n                    ) : (\r\n                    <div className=\"map-radio__container\">\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"전체\" defaultChecked onChange={onTypeChange}/><label htmlFor=\"전체\">전체</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"맛집\" onChange={onTypeChange}/><label htmlFor=\"맛집\">맛집</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"카페 & 베이커리\" onChange={onTypeChange}/><label htmlFor=\"카페 & 베이커리\">카페 & 베이커리</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"풍경\" onChange={onTypeChange}/><label htmlFor=\"풍경\">풍경</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"술집\" onChange={onTypeChange}/><label htmlFor=\"술집\">술집</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"그 외 가볼만한 곳\" onChange={onTypeChange}/><label htmlFor=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</label>\r\n                    </div>\r\n                    )}\r\n                    <div>\r\n                        <button className=\"check-geolocation\" onClick={onClickLocation}><FontAwesomeIcon icon={faLocationArrow} /> 현재 위치 표시하기</button>\r\n                    </div>\r\n                </div>\r\n                {detail && (\r\n                    <div className=\"map__detail vertical\">\r\n                        <h3>{detail.name}</h3>\r\n                        {detail.attachmentUrlArray[0] && (\r\n                            <>\r\n                                <img src={detail.attachmentUrlArray[imgPage]} alt=\"detail-img\" width=\"100%\" height=\"auto\"/>\r\n                                <div className=\"map-detail__img-btn__container\">\r\n                                    {imgPage !== 0 && <button className=\"map-detail__img-btn prev\" onClick={clickPrevImg}>◀</button>}\r\n                                    {imgPage !== detail.attachmentUrlArray.length -1 & detail.attachmentUrlArray.lenth !== 1 && <button className=\"map-detail__img-btn next\" onClick={clickNextImg}>▶</button>}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <div>{detail.description}</div>\r\n                        <Link to={{\r\n                                    pathname: \"/detail\",\r\n                                    state: {\r\n                                        from: \"지도\",\r\n                                        place: detail\r\n                                    }\r\n                                }}>\r\n                        더 알아보기\r\n                        </Link>\r\n                        {detail.url !== \"\" && <a href={detail.url} target=\"_blank\" rel=\"noreferrer\">관련 사이트</a>}\r\n                        {/* <AddMyPlace place={detail}/> */}\r\n                        <div className=\"map__detail-clear\" onClick={onClickClear}>❌</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Map;","import { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport List from \"components/List\";\r\nimport Map from \"components/Map\";\r\nimport { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Home = ({ isMobile }) => {\r\n    const location = useLocation();\r\n    const [loading, setLoading] = useState(false);\r\n    const [places, setPlaces] = useState([]);\r\n    const [viewType, setViewType] = useState(\"지도\");\r\n    const localArray = JSON.parse(localStorage.getItem(\"micheltain_myplace\"))\r\n\r\n    const getPlaces = async () => {\r\n        await dbService.collection(\"places\").onSnapshot(snapshot => {\r\n            const placeArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setPlaces(placeArray);\r\n            setLoading(true);\r\n        })\r\n    }\r\n    const onClickMap = () => {\r\n        if (viewType === \"목록\") {\r\n            setViewType(\"지도\")\r\n        } else if (viewType === \"지도\") {\r\n            setViewType(\"목록\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPlaces();\r\n        if (location.state !== undefined) {\r\n            setViewType(location.state.prevViewType)\r\n        } \r\n    }, [])\r\n    return (\r\n        <div className=\"home__container\">\r\n            <h3 className=\"home__title\">MICHETAIN GUIDE</h3>\r\n            <button className=\"home-viewtype\" onClick={onClickMap}><FontAwesomeIcon icon={faExchangeAlt} /> {viewType === \"지도\" ? \"리스트로 보기\" : \"지도로 보기\"}</button>   \r\n            {loading === true & viewType === \"지도\" \r\n            ? <Map places={places} localArray={localArray} isMobile={isMobile}/>\r\n            : (loading === true & viewType === \"목록\"\r\n                ? <List places={places} localArray={localArray} isMobile={isMobile}/>\r\n                : \"Loading...\"\r\n            )\r\n            }\r\n            {/* <Link to=\"/myplace\"><button>내 여행지 목록</button></Link> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MyPlace = () => {\r\n    const history = useHistory();\r\n    const [myPlaceArray, setMyPlaceArray] = useState([]);\r\n    const clickBackBtn = () => {\r\n        history.push({\r\n            pathname: \"/\",\r\n            state: {\r\n                prevViewType: \"목록\"\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const localMyPlace = JSON.parse(localStorage.getItem(\"micheltain_myplace\"))\r\n        setMyPlaceArray(localMyPlace)\r\n    }, [])\r\n    return (\r\n        <>\r\n            {myPlaceArray && \r\n                <>\r\n                    {myPlaceArray.map((myPlace)=>{\r\n                        return(\r\n                            <>\r\n                                <div>{myPlace.name}</div>\r\n                                <div>{myPlace.description}</div>\r\n                            </>\r\n                        )})\r\n                    }\r\n                </>\r\n            }\r\n            <button onClick={clickBackBtn}>Back</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyPlace;","import imageCompression from \"browser-image-compression\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\n/* global kakao */\r\n\r\nconst PostForm = ({userObj}) => {\r\n    const [name, setName] = useState('');\r\n    const [extraAddress, setExtraAddress] = useState(''); \r\n    const [geocode, setGeocode] = useState([]);\r\n    const [type, setType] = useState('그외 가볼만한 곳');\r\n    const [description, setDescription] = useState('');\r\n    const [attachmentArray, setAttachmentArray] = useState([]);\r\n    const [url, setUrl] = useState('');\r\n\r\n    const [address, setAddress] = useState(\"\");\r\n    const [addressDetail, setAddressDetail] = useState(\"\");\r\n    const [isOpenPost, setIsOpenPost] = useState(false);\r\n\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrlArray = [];\r\n        if (attachmentArray !== []) {\r\n            for (let i = 0; i < attachmentArray.length; i++) {\r\n                const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n                const response = await attachmentRef.putString(attachmentArray[i], \"data_url\")\r\n                attachmentUrlArray.push(await response.ref.getDownloadURL());\r\n            }\r\n        }\r\n\r\n        const placeObj = {\r\n            name,\r\n            addressDetail,\r\n            address,\r\n            extraAddress,\r\n            geocode,\r\n            type,\r\n            description,\r\n            attachmentUrlArray,\r\n            url,\r\n            creatorId: userObj.uid\r\n        }\r\n        await dbService.collection(\"places\").add(placeObj)\r\n        setName('');\r\n        setAddress('');\r\n        setAddressDetail('');\r\n        setExtraAddress('');\r\n        setGeocode([]);\r\n        setType('');\r\n        setDescription('');\r\n        setAttachmentArray([]);\r\n        setUrl('');\r\n    }\r\n\r\n    const onNameChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setName(value);\r\n    }\r\n\r\n    const onExtraAddressChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setExtraAddress(value);\r\n    }\r\n    \r\n    const onTypeChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setType(value);\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setDescription(value);\r\n    }\r\n\r\n    const onAttachmentChange = async (event) => {\r\n        const {target: { files }} = event;\r\n        const fileArray = files;\r\n        if (fileArray.length < 6) {\r\n            const options = {\r\n                maxSizeMB: 1,\r\n                maxWidthOrHeight: 1024,\r\n            }\r\n            try {\r\n                let resultArray = [];\r\n                for (let i = 0; i < fileArray.length; i++) {\r\n                    const compressedFile = await imageCompression(fileArray[i], options)\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(compressedFile);\r\n                    reader.onloadend = (finishedEvent) => {\r\n                        const {currentTarget : {result}} = finishedEvent\r\n                        resultArray.push(result)\r\n                    }\r\n                }\r\n                setAttachmentArray(resultArray);\r\n                // const theFile = files[0];\r\n                // const compressedFile = await imageCompression(theFile, options)\r\n                // const reader = new FileReader();\r\n                // reader.readAsDataURL(compressedFile);\r\n                // reader.onloadend = (finishedEvent) => {\r\n                //     const {currentTarget: {result}} = finishedEvent\r\n                //     setAttachment(result)\r\n                // }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } else {\r\n            alert('사진은 5장까지입니다.')\r\n        }\r\n    }\r\n\r\n    const onUrlChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setUrl(value);\r\n    }\r\n\r\n    const onChangeOpenPost = (event) => {\r\n        event.preventDefault();\r\n        setIsOpenPost(!isOpenPost);\r\n    };\r\n    \r\n    const makeGeocode = (result, status) => {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n            const geocodeArray = [result[0].y, result[0].x]\r\n            setGeocode(geocodeArray)\r\n        }\r\n    }\r\n\r\n    const onCompletePost = async (data) => {\r\n        let fullAddr = data.address;\r\n        let extraAddr = '';\r\n    \r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddr += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddr += (extraAddr !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddr += (extraAddr !== '' ? ` (${extraAddr})` : '');\r\n        }\r\n    \r\n        setAddress(data.zonecode);\r\n        setAddressDetail(fullAddr);\r\n    \r\n        await geocoder.addressSearch(addressDetail, makeGeocode)\r\n\r\n        setIsOpenPost(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"post-form__container\" onSubmit={onSubmit}>\r\n            <div className=\"post-form__content\">               \r\n                <label htmlFor=\"place-name\">장소 이름 : </label>\r\n                <input type=\"text\" name=\"place-name\" onChange={onNameChange} value={name} required/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">  \r\n                <div className=\"address-input\">\r\n                    { isOpenPost && <DaumPostcode autoClose onComplete={onCompletePost} /> }\r\n                    <button onClick={onChangeOpenPost}>주소 입력(지번)</button>\r\n                </div>\r\n                <div className=\"address-content__container\">\r\n                    <label htmlFor=\"place-address\">주소 : </label>\r\n                    <input className=\"place-address\" type=\"text\" name=\"place-address\" value={addressDetail} readOnly required/>\r\n                    <input className=\"place-address-number\" type=\"text\" name=\"place-address-number\" value={address} readOnly required/>\r\n                </div>         \r\n                <div className=\"address-content__container\">\r\n                    <label htmlFor=\"place-address\">나머지 주소 : </label>\r\n                    <input type=\"text\" name=\"place-extra-address\" onChange={onExtraAddressChange} value={extraAddress}/>  \r\n                </div>  \r\n                <input className=\"place-geocode\" type=\"text\" name=\"place-geocode\" readOnly value={geocode} required />\r\n            </div>     \r\n            <div className=\"post-form__content vertical\">         \r\n                <label htmlFor=\"place-type\">장소 종류</label>\r\n                <select name=\"place-type\" required onChange={onTypeChange} >\r\n                    <option value=\"맛집\">맛집</option>\r\n                    <option value=\"카페 & 베이커리\">카페 & 베이커리</option>\\\r\n                    <option value=\"풍경\">풍경</option>\r\n                    <option value=\"술집\">술집</option>\r\n                    <option value=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-description\">장소 설명</label>\r\n                <textarea className=\"place-description\" name=\"place-description\" placeholder=\"설명\" onChange={onDescriptionChange} value={description} required/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-img\">장소 사진(필수 X)</label>\r\n                <input type=\"file\" accept=\"image/*\" name=\"place-img\" onChange={onAttachmentChange} multiple/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-description\">참고 사이트 주소(있다면)</label>\r\n                <input type=\"url\" nmae=\"place-url\" placeholder=\"사이트 주소\" onChange={onUrlChange}  value={url}/>\r\n            </div>\r\n            <input type=\"submit\" value=\"등록하기\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm;","import PostForm from \"components/PostForm\";\r\nimport { authService } from \"fBase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Post = ({userObj}) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\")\r\n    }\r\n    const onHomeClick = () => {\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <div className=\"post__container\">\r\n            <PostForm userObj={userObj}/>\r\n            <button onClick={onHomeClick}>Home</button>\r\n            <button onClick={onLogOutClick}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, useHistory} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Detail from \"routes/Detail\";\r\nimport Home from \"routes/Home\";\r\nimport MyPlace from \"routes/MyPlace\";\r\nimport Post from \"routes/Post\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, isMobile }) => {\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    {isLoggedIn \r\n                        ? (                        \r\n                            <Route exact path=\"/auth\">\r\n                                <Post userObj={userObj}/>\r\n                            </Route>\r\n                        ) : (    \r\n                            <Route exact path=\"/auth\">\r\n                                <Auth />\r\n                            </Route>\r\n                            )\r\n                    }\r\n                    <Route exact path=\"/\">\r\n                        <Home isMobile={isMobile}/>\r\n                    </Route>\r\n                    <Route exact path=\"/detail\">\r\n                        <Detail />\r\n                    </Route>\r\n                    <Route exact path=\"/myplace\">\r\n                        <MyPlace />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\"\nimport {authService} from \"fBase\"\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const userAgent = navigator.userAgent;\n  const checkIsMobile = () => {\n    if (userAgent.match(/iPhone|iPod|Android|Windows CE|BlackBerry|Symbian|Windows Phone|webOS|Opera Mini|Opera Mobi|POLARIS|IEMobile|lgtelecom|nokia|SonyEricsson/i) != null || userAgent.match(/LG|SAMSUNG|Samsung/) != null){\n      setIsMobile(true)\n      } else{\n      setIsMobile(false)\n    }\n  }\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          uid:user.uid, \n        });\n      } else {\n        setUserObj(null);\n      }\n      checkIsMobile();\n      setInit(true)\n    })\n  }, [])\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={ userObj } isMobile={isMobile} /> : \"Loading...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}