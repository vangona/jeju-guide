{"version":3,"sources":["fBase.js","routes/Auth.js","routes/Detail.js","components/List.js","components/Map.js","routes/Home.js","components/PostForm.js","routes/Post.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","icon","faExchangeAlt","Detail","place","useLocation","state","history","useHistory","imgPage","setImgPage","src","attachmentUrlArray","style","maxHeight","alt","length","lenth","description","push","pathname","prevViewType","List","places","map","index","to","addressDetail","Map","setType","detail","setDetail","mouseState","setMouseState","container","useRef","options","center","kakao","maps","LatLng","level","makeMarker","content","position","geocode","overlay","CustomOverlay","yAnchor","marker","Marker","addListener","clickHandler","setMap","mouseOverHandler","mouseOutHandler","onTypeChange","useEffect","window","current","ref","defaultChecked","htmlFor","width","height","url","href","rel","Home","location","loading","setLoading","setPlaces","viewType","setViewType","onViewTypeChange","getPlaces","collection","onSnapshot","snapshot","placeArray","docs","doc","id","data","undefined","PostForm","userObj","setName","extraAddress","setExtraAddress","setGeocode","setDescription","attachmentArray","setAttachmentArray","setUrl","address","setAddress","setAddressDetail","isOpenPost","setIsOpenPost","geocoder","services","Geocoder","i","attachmentRef","child","uid","uuidv4","putString","response","getDownloadURL","console","log","placeObj","creatorId","add","onAttachmentChange","files","fileArray","maxSizeMB","maxWidthOrHeight","resultArray","imageCompression","compressedFile","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","alert","makeGeocode","status","Status","OK","geocodeArray","y","x","onCompletePost","fullAddr","extraAddr","addressType","bname","buildingName","zonecode","addressSearch","autoClose","onComplete","readOnly","accept","multiple","nmae","Post","signOut","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e68662c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDbt76_Zwf7Pnx-cBDVxe6oDWnv32v9xqo\",\r\n  authDomain: \"jeju-guide.firebaseapp.com\",\r\n  projectId: \"jeju-guide\",\r\n  storageBucket: \"jeju-guide.appspot.com\",\r\n  messagingSenderId: \"350907878366\",\r\n  appId: \"1:350907878366:web:2f3fcda2d82f9ab4602b4f\",\r\n  measurementId: \"G-2F62EPJ668\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\")\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        let data;\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n                setError(\"입력하신 아이디가 없습니다.\")\r\n            } else {\r\n                setError(error.message)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n    return (\r\n        <>\r\n            <div className=\"auth-form__container\">\r\n                <form className=\"auth-form\" onSubmit={onSubmit}>\r\n                    <label className=\"auth-form__title\">미슐탱 가이드</label>\r\n                    <input className=\"input auth__input\" name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                    <input className=\"input auth__input\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                    <input className=\"btn\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                    <span className=\"error\">{error}</span>\r\n                    <span className=\"change-btn\" onClick={toggleAccount}>\r\n                        <FontAwesomeIcon icon={faExchangeAlt} className=\"change-btn__logo\" />\r\n                        {newAccount? \"Log In\" : \"Create Account\"}\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Detail = () => {\r\n    const location = useLocation();\r\n    const { state : { place } } = location;\r\n    const history = useHistory();\r\n    const [imgPage, setImgPage] = useState(0);\r\n\r\n    const clickBackBtn = () => {\r\n        history.push({\r\n            pathname: \"/\",\r\n            state: {\r\n                prevViewType: \"목록\"\r\n            }\r\n        })\r\n    }\r\n\r\n    const clickNextImg = () => {\r\n        if (imgPage < 4) {\r\n            setImgPage(prev => prev + 1);\r\n        }\r\n    }\r\n\r\n    const clickPrevImg = () => {\r\n        if (imgPage > 0) {\r\n            setImgPage(prev => prev - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>{place.name}</div>\r\n            <img src={place.attachmentUrlArray[imgPage]} style={{maxHeight:\"300px\"}} alt=\"detail-img\"/>\r\n            <div className=\"map-detail__img-btn__container\">\r\n                {imgPage !== 0 && <button className=\"map-detail__img-btn prev\" onClick={clickPrevImg}>◀</button>}\r\n                {imgPage !== place.attachmentUrlArray.length -1 & place.attachmentUrlArray.lenth !== 1 && <button className=\"map-detail__img-btn next\" onClick={clickNextImg}>▶</button>}\r\n            </div>\r\n            <p>{place.description}</p>\r\n            <button onClick={clickBackBtn}>Back</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst List = ({places}) => {\r\n    return (\r\n        <>\r\n            <table className=\"map-list__table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>번호</th>\r\n                    <th>이름</th>\r\n                    <th>주소</th>\r\n                    <th>설명</th>\r\n                </tr>\r\n            </thead>\r\n            {places.map((place, index) => {\r\n                return (\r\n                    <tbody key={index}>\r\n                        <tr>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                                <Link to={{\r\n                                    pathname: \"/detail\",\r\n                                    state: {\r\n                                        place\r\n                                    }\r\n                                }}>\r\n                                {place.name}\r\n                                </Link>\r\n                            </td>\r\n                            <td>{place.addressDetail}</td>\r\n                            <td>{place.description}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                )\r\n            })}\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default List;","import { dbService } from \"fBase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* global kakao */\r\n\r\nconst Map = ({places}) => {\r\n    const [type, setType] = useState(\"전체\");\r\n    const [detail, setDetail] = useState(null);\r\n    const [imgPage, setImgPage] = useState(0);\r\n    const [mouseState, setMouseState] = useState(false);\r\n    const [myPlace, setMyPlace] = useState([]);\r\n    const container = useRef(null);\r\n    let map = {};\r\n    const options = {\r\n        center: new kakao.maps.LatLng(33.3817, 126.5602), //지도의 중심좌표.\r\n        level: 10 //지도의 레벨(확대, 축소 정도)\r\n    }\r\n\r\n    const clickNextImg = () => {\r\n        if (imgPage < 4) {\r\n            setImgPage(prev => prev + 1);\r\n        }\r\n    }\r\n\r\n    const clickPrevImg = () => {\r\n        if (imgPage > 0) {\r\n            setImgPage(prev => prev - 1);\r\n        }\r\n    }\r\n\r\n    const clickHandler = (place) => {\r\n        return function () {\r\n            setDetail(place)\r\n        }\r\n    }\r\n\r\n    const mouseOverHandler = (map, overlay) => {\r\n        return function () {\r\n            overlay.setMap(map);\r\n            setMouseState(true)\r\n        }\r\n    };\r\n\r\n    const mouseOutHandler = (overlay) => {\r\n        return function () {\r\n            overlay.setMap(null)\r\n            setMouseState(false)\r\n        }\r\n    };\r\n\r\n    const makeMarker = (place) => {\r\n        const content = `<div class=\"place__infowindow\">${place.name}</div>`\r\n        const position = new kakao.maps.LatLng(place.geocode[0], place.geocode[1])\r\n        const overlay = new kakao.maps.CustomOverlay({\r\n            content,\r\n            position,\r\n            yAnchor: 2,\r\n        })\r\n        const marker = new kakao.maps.Marker({\r\n            map: map,\r\n            position\r\n        });\r\n\r\n        kakao.maps.event.addListener(marker, 'click', clickHandler(place));\r\n        kakao.maps.event.addListener(marker, 'mouseover', mouseOverHandler(map, overlay));\r\n        kakao.maps.event.addListener(marker, 'mouseout', mouseOutHandler(overlay));\r\n    }\r\n\r\n    const makeMap = () => {\r\n        map = new window.kakao.maps.Map(container.current, options);\r\n    }\r\n\r\n    const onTypeChange = (event) => {\r\n        const {target : { value } } = event;\r\n        setType(value)\r\n    }\r\n\r\n    const onClickClear = () => {\r\n        setDetail(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        makeMap();\r\n        places.map(place => {\r\n            if(type === \"전체\" || place.type === type) {\r\n                makeMarker(place)\r\n            }\r\n        })\r\n    }, []);\r\n    return (\r\n        <>\r\n            <div className=\"map__container\">\r\n                <div className=\"vertical\">\r\n                    <div className=\"map\" ref={container} ></div>\r\n                    <div className=\"map-radio__container\">\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"전체\" defaultChecked onChange={onTypeChange}/><label htmlFor=\"전체\">전체</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"맛집\" onChange={onTypeChange}/><label htmlFor=\"맛집\">맛집</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"카페 & 베이커리\" onChange={onTypeChange}/><label htmlFor=\"카페 & 베이커리\">카페 & 베이커리</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"풍경\" onChange={onTypeChange}/><label htmlFor=\"풍경\">풍경</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"술집\" onChange={onTypeChange}/><label htmlFor=\"술집\">술집</label>\r\n                            <input type=\"radio\" name=\"input__place-type\" value=\"그 외 가볼만한 곳\" onChange={onTypeChange}/><label htmlFor=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</label>\r\n                    </div>\r\n                    {mouseState && <span>더 알아보시려면 마커를 클릭해주세요.</span>}\r\n                </div>\r\n                {detail && (\r\n                    <div className=\"map__detail vertical\">\r\n                        <h3>{detail.name}</h3>\r\n                        {detail.attachmentUrlArray[0] && (\r\n                            <>\r\n                                <img src={detail.attachmentUrlArray[imgPage]} alt=\"detail-img\" width=\"100%\" height=\"auto\"/>\r\n                                <div className=\"map-detail__img-btn__container\">\r\n                                    {imgPage !== 0 && <button className=\"map-detail__img-btn prev\" onClick={clickPrevImg}>◀</button>}\r\n                                    {imgPage !== detail.attachmentUrlArray.length -1 & detail.attachmentUrlArray.lenth !== 1 && <button className=\"map-detail__img-btn next\" onClick={clickNextImg}>▶</button>}\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <div>{detail.description}</div>\r\n                        {detail.url !== \"\" && <a href={detail.url} target=\"_blank\" rel=\"noreferrer\">관련 사이트</a>}\r\n                        <div className=\"map__detail-clear\" onClick={onClickClear}>❌</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Map;","import List from \"components/List\";\r\nimport Map from \"components/Map\";\r\nimport { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    const location = useLocation();\r\n    const [loading, setLoading] = useState(false);\r\n    const [places, setPlaces] = useState([]);\r\n    const [viewType, setViewType] = useState(\"지도\");\r\n    const onViewTypeChange = (event) => {\r\n        const {target : {value}} = event;\r\n        setViewType(value);\r\n    }\r\n\r\n    const getPlaces = async () => {\r\n        await dbService.collection(\"places\").onSnapshot(snapshot => {\r\n            const placeArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setPlaces(placeArray);\r\n            setLoading(true);\r\n        })\r\n    }\r\n    const onClickMap = () => {\r\n        setViewType(\"지도\")\r\n    }\r\n    useEffect(() => {\r\n        getPlaces();\r\n        if (location.state !== undefined) {\r\n            setViewType(location.state.prevViewType)\r\n        } \r\n    }, [])\r\n    return (\r\n        <div className=\"home__container\">\r\n            <h3 className=\"home__title\">MICHETAIN GUIDE</h3>\r\n            {loading === true & viewType === \"지도\" \r\n            ? \r\n            <>\r\n                <div>\r\n                    <input type=\"radio\" name=\"input__view-type\" value=\"지도\" defaultChecked onChange={onViewTypeChange}/><label htmlFor=\"지도\">지도</label>\r\n                    <input type=\"radio\" name=\"input__view-type\" value=\"목록\" onChange={onViewTypeChange}/><label htmlFor=\"목록\">목록</label>\r\n                </div>\r\n                <Map places={places}/>\r\n            </>\r\n            : (loading === true & viewType === \"목록\"\r\n                ?\r\n                <> \r\n                    <List places={places}/>\r\n                    <button onClick={onClickMap}>지도로 보기</button>\r\n                </>\r\n                : \"Loading...\"\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import imageCompression from \"browser-image-compression\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\n/* global kakao */\r\n\r\nconst PostForm = ({userObj}) => {\r\n    const [name, setName] = useState('');\r\n    const [extraAddress, setExtraAddress] = useState(''); \r\n    const [geocode, setGeocode] = useState([]);\r\n    const [type, setType] = useState('그외 가볼만한 곳');\r\n    const [description, setDescription] = useState('');\r\n    const [attachmentArray, setAttachmentArray] = useState([]);\r\n    const [url, setUrl] = useState('');\r\n\r\n    const [address, setAddress] = useState(\"\");\r\n    const [addressDetail, setAddressDetail] = useState(\"\");\r\n    const [isOpenPost, setIsOpenPost] = useState(false);\r\n\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrlArray = [];\r\n        if (attachmentArray !== []) {\r\n            for (let i = 0; i < attachmentArray.length; i++) {\r\n                const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n                const response = await attachmentRef.putString(attachmentArray[i], \"data_url\")\r\n                attachmentUrlArray.push(await response.ref.getDownloadURL());\r\n            }\r\n            console.log(attachmentUrlArray)\r\n        }\r\n\r\n        const placeObj = {\r\n            name,\r\n            addressDetail,\r\n            address,\r\n            extraAddress,\r\n            geocode,\r\n            type,\r\n            description,\r\n            attachmentUrlArray,\r\n            url,\r\n            creatorId: userObj.uid\r\n        }\r\n        await dbService.collection(\"places\").add(placeObj)\r\n        setName('');\r\n        setAddress('');\r\n        setAddressDetail('');\r\n        setExtraAddress('');\r\n        setGeocode([]);\r\n        setType('');\r\n        setDescription('');\r\n        setAttachmentArray([]);\r\n        setUrl('');\r\n    }\r\n\r\n    const onNameChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setName(value);\r\n    }\r\n\r\n    const onExtraAddressChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setExtraAddress(value);\r\n    }\r\n    \r\n    const onTypeChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setType(value);\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setDescription(value);\r\n    }\r\n\r\n    const onAttachmentChange = async (event) => {\r\n        const {target: { files }} = event;\r\n        const fileArray = files;\r\n        if (fileArray.length < 6) {\r\n            const options = {\r\n                maxSizeMB: 1,\r\n                maxWidthOrHeight: 1024,\r\n            }\r\n            try {\r\n                let resultArray = [];\r\n                for (let i = 0; i < fileArray.length; i++) {\r\n                    const compressedFile = await imageCompression(fileArray[i], options)\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(compressedFile);\r\n                    reader.onloadend = (finishedEvent) => {\r\n                        const {currentTarget : {result}} = finishedEvent\r\n                        resultArray.push(result)\r\n                    }\r\n                }\r\n                setAttachmentArray(resultArray);\r\n                // const theFile = files[0];\r\n                // const compressedFile = await imageCompression(theFile, options)\r\n                // const reader = new FileReader();\r\n                // reader.readAsDataURL(compressedFile);\r\n                // reader.onloadend = (finishedEvent) => {\r\n                //     const {currentTarget: {result}} = finishedEvent\r\n                //     setAttachment(result)\r\n                // }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } else {\r\n            alert('사진은 5장까지입니다.')\r\n        }\r\n    }\r\n\r\n    const onUrlChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setUrl(value);\r\n    }\r\n\r\n    const onChangeOpenPost = (event) => {\r\n        event.preventDefault();\r\n        setIsOpenPost(!isOpenPost);\r\n    };\r\n    \r\n    const makeGeocode = (result, status) => {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n            const geocodeArray = [result[0].y, result[0].x]\r\n            setGeocode(geocodeArray)\r\n        }\r\n    }\r\n\r\n    const onCompletePost = async (data) => {\r\n        let fullAddr = data.address;\r\n        let extraAddr = '';\r\n    \r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddr += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddr += (extraAddr !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddr += (extraAddr !== '' ? ` (${extraAddr})` : '');\r\n        }\r\n    \r\n        setAddress(data.zonecode);\r\n        setAddressDetail(fullAddr);\r\n    \r\n        await geocoder.addressSearch(addressDetail, makeGeocode)\r\n\r\n        setIsOpenPost(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"post-form__container\" onSubmit={onSubmit}>\r\n            <div className=\"post-form__content\">               \r\n                <label htmlFor=\"place-name\">장소 이름 : </label>\r\n                <input type=\"text\" name=\"place-name\" onChange={onNameChange} value={name} required/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">  \r\n                <div className=\"address-input\">\r\n                    { isOpenPost && <DaumPostcode autoClose onComplete={onCompletePost} /> }\r\n                    <button onClick={onChangeOpenPost}>주소 입력(지번)</button>\r\n                </div>\r\n                <div className=\"address-content__container\">\r\n                    <label htmlFor=\"place-address\">주소 : </label>\r\n                    <input className=\"place-address\" type=\"text\" name=\"place-address\" value={addressDetail} readOnly required/>\r\n                    <input className=\"place-address-number\" type=\"text\" name=\"place-address-number\" value={address} readOnly required/>\r\n                </div>         \r\n                <div className=\"address-content__container\">\r\n                    <label htmlFor=\"place-address\">나머지 주소 : </label>\r\n                    <input type=\"text\" name=\"place-extra-address\" onChange={onExtraAddressChange} value={extraAddress}/>  \r\n                </div>  \r\n                <input className=\"place-geocode\" type=\"text\" name=\"place-geocode\" readOnly value={geocode} required />\r\n            </div>     \r\n            <div className=\"post-form__content vertical\">         \r\n                <label htmlFor=\"place-type\">장소 종류</label>\r\n                <select name=\"place-type\" required onChange={onTypeChange} >\r\n                    <option value=\"맛집\">맛집</option>\r\n                    <option value=\"카페 & 베이커리\">카페 & 베이커리</option>\\\r\n                    <option value=\"풍경\">풍경</option>\r\n                    <option value=\"술집\">술집</option>\r\n                    <option value=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-description\">장소 설명</label>\r\n                <textarea className=\"place-description\" name=\"place-description\" placeholder=\"설명\" onChange={onDescriptionChange} value={description} required/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-img\">장소 사진(필수 X)</label>\r\n                <input type=\"file\" accept=\"image/*\" name=\"place-img\" onChange={onAttachmentChange} multiple/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-description\">참고 사이트 주소(있다면)</label>\r\n                <input type=\"url\" nmae=\"place-url\" placeholder=\"사이트 주소\" onChange={onUrlChange}  value={url}/>\r\n            </div>\r\n            <input type=\"submit\" value=\"등록하기\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm;","import PostForm from \"components/PostForm\";\r\nimport { authService } from \"fBase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Post = ({userObj}) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\")\r\n    }\r\n    const onHomeClick = () => {\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <div className=\"post__container\">\r\n            <PostForm userObj={userObj}/>\r\n            <button onClick={onHomeClick}>Home</button>\r\n            <button onClick={onLogOutClick}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, useHistory} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Detail from \"routes/Detail\";\r\nimport Home from \"routes/Home\";\r\nimport Post from \"routes/Post\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n    const prevViewType = \"지도\"\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    {isLoggedIn \r\n                        ? (                        \r\n                            <Route exact path=\"/auth\">\r\n                                <Post userObj={userObj}/>\r\n                            </Route>\r\n                        ) : (    \r\n                            <Route exact path=\"/auth\">\r\n                                <Auth />\r\n                            </Route>\r\n                            )\r\n                    }\r\n                    <Route exact path=\"/\">\r\n                        <Home prevViewType={prevViewType}/>\r\n                    </Route>\r\n                    <Route exact path=\"/detail\">\r\n                        <Detail />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\"\nimport {authService} from \"fBase\"\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          uid:user.uid, \n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true)\n    })\n  }, [])\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={ userObj } /> : \"Loading...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}