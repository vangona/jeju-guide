{"version":3,"sources":["fBase.js","routes/Auth.js","routes/Detail.js","routes/Edit.js","components/Pagination.js","components/List.js","components/Map.js","routes/Home.js","components/PostForm.js","routes/Post.js","routes/Tips.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","icon","faExchangeAlt","Detail","location","useLocation","place","state","from","history","useHistory","imgPage","setImgPage","attachmentUrlArray","src","style","maxWidth","alt","faAngleLeft","length","lenth","faAngleRight","description","display","data-ad-unit","data-ad-width","data-ad-height","marginTop","push","pathname","prevViewType","async","Edit","Pagination","postsPerPage","totalPosts","currentPage","paginate","pageNumbers","lastPageNumber","Math","ceil","i","map","number","List","places","localArray","isMobile","setValue","setType","setCurrentPage","setPostsPerPage","indexOfLast","indexOfFirst","posts","currentPosts","slice","filter","index","includes","addressDetail","backgroundColor","some","localPlace","to","list__table-content","defaultValue","Map","setDetail","mouseState","setMouseState","currentPlace","setCurrentPlace","container","useRef","makeMarker","content","document","createElement","innerHTML","position","kakao","maps","LatLng","geocode","overlay","CustomOverlay","yAnchor","clickable","imageSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","marker","Marker","image","addListener","setMap","clickMobileHandler","removeOverlay","clickHandler","mouseOverHandler","mouseOutHandler","useEffect","level","options","center","window","current","makeMap","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","locPosition","displayMarker","alert","faLocationArrow","ref","faMousePointer","size","Home","detail","loading","setLoading","setPlaces","viewType","setViewType","JSON","parse","localStorage","getItem","getPlaces","collection","onSnapshot","snapshot","placeArray","docs","doc","id","data","undefined","width","height","url","href","rel","PostForm","userObj","setName","extraAddress","setExtraAddress","setGeocode","setDescription","attachmentArray","setAttachmentArray","setUrl","address","setAddress","setAddressDetail","isOpenPost","setIsOpenPost","geocoder","services","Geocoder","attachmentRef","child","uid","uuidv4","putString","response","getDownloadURL","placeObj","creatorId","add","onAttachmentChange","files","fileArray","maxSizeMB","maxWidthOrHeight","resultArray","imageCompression","compressedFile","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","console","log","makeGeocode","status","Status","OK","geocodeArray","y","x","onCompletePost","fullAddr","extraAddr","addressType","bname","buildingName","zonecode","addressSearch","htmlFor","autoClose","onComplete","readOnly","accept","multiple","nmae","Post","signOut","Tips","maxHeight","textAlign","fontSize","faInstagram","color","faFacebook","faGithub","title","goBack","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","setIsMobile","userAgent","onAuthStateChanged","user","match","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.772bff01.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDbt76_Zwf7Pnx-cBDVxe6oDWnv32v9xqo\",\r\n  authDomain: \"jeju-guide.firebaseapp.com\",\r\n  projectId: \"jeju-guide\",\r\n  storageBucket: \"jeju-guide.appspot.com\",\r\n  messagingSenderId: \"350907878366\",\r\n  appId: \"1:350907878366:web:2f3fcda2d82f9ab4602b4f\",\r\n  measurementId: \"G-2F62EPJ668\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\")\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        let data;\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, \r\n                    password\r\n                );\r\n            }\r\n        } catch (error) {\r\n            if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n                setError(\"입력하신 아이디가 없습니다.\")\r\n            } else {\r\n                setError(error.message)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n    return (\r\n        <>\r\n            <div className=\"auth-form__container\">\r\n                <form className=\"auth-form\" onSubmit={onSubmit}>\r\n                    <label className=\"auth-form__title\">미슐탱 가이드</label>\r\n                    <input className=\"input auth__input\" name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                    <input className=\"input auth__input\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                    <input className=\"btn\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                    <span className=\"error\">{error}</span>\r\n                    <span className=\"change-btn\" onClick={toggleAccount}>\r\n                        <FontAwesomeIcon icon={faExchangeAlt} className=\"change-btn__logo\" />\r\n                        {newAccount? \"Log In\" : \"Create Account\"}\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport AddMyPlace from \"components/AddMyPlace\";\r\nimport React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ScriptTag from \"react-script-tag\"\r\n\r\nconst Detail = () => {\r\n    const location = useLocation();\r\n    const { state : { place } } = location;\r\n    const { state: { from } } = location;\r\n    const history = useHistory();\r\n    const [imgPage, setImgPage] = useState(0);\r\n\r\n    const clickBackBtn = () => {\r\n        history.push({\r\n            pathname: \"/\",\r\n            state: {\r\n                prevViewType: from\r\n            }\r\n        })\r\n    }\r\n\r\n    const clickNextImg = () => {\r\n        if (imgPage < 4) {\r\n            setImgPage(prev => prev + 1);\r\n        }\r\n    }\r\n\r\n    const clickPrevImg = () => {\r\n        if (imgPage > 0) {\r\n            setImgPage(prev => prev - 1);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"detail__container\">\r\n            <div className=\"detail-box\">\r\n                <div className=\"detail__name\">{place.name}</div>\r\n                {place.attachmentUrlArray[0] \r\n                ? (<div className=\"detail-img__container\">\r\n                    <img className=\"detail__img\" src={place.attachmentUrlArray[imgPage]} style={{maxWidth:\"100%\"}} alt=\"detail-img\"/>\r\n                    <div className=\"detail-img-btn__container\">\r\n                        {imgPage !== 0 && <button className=\"detail__prev detail-btn\" onClick={clickPrevImg}><FontAwesomeIcon icon={faAngleLeft} /></button>}\r\n                        {imgPage !== place.attachmentUrlArray.length -1 & place.attachmentUrlArray.lenth !== 1 ? <button className=\"detail__next detail-btn\" onClick={clickNextImg}><FontAwesomeIcon icon={faAngleRight} /></button> : null}\r\n                    </div>\r\n                </div>)\r\n                : null}\r\n                <p className=\"detail__description\">{place.description}</p>\r\n                {/* <AddMyPlace place={place}/> */}\r\n                <ins\r\n                className=\"kakao_ad_area\"\r\n                style={{display:\"none\"}}\r\n                data-ad-unit=\"DAN-c9rNVYJ0iiSwi4Sm\"\r\n                data-ad-width=\"320\"\r\n                data-ad-height=\"50\"\r\n                ></ins>\r\n                <button style={{marginTop:\"1rem\"}} onClick={clickBackBtn}>돌아가기</button>\r\n            </div>\r\n            <span className=\"copyright\">&copy; 2021, 나만의 서랍장 Co. all rights reserved.</span>\r\n            <ScriptTag type=\"text/javascript\"\r\n                    src=\"//t1.daumcdn.net/kas/static/ba.min.js\" \r\n                    async >\r\n            </ScriptTag>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\n\r\nconst Edit = () => {\r\n    return (\r\n        <div>Edit</div>\r\n    )\r\n}\r\n\r\nexport default Edit;","import React from \"react\";\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, currentPage, paginate}) => {\r\n    const pageNumbers = [];\r\n    const lastPageNumber = Math.ceil(totalPosts / postsPerPage);\r\n    for (let i = 1; i <= lastPageNumber; i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"pagination__container\">\r\n                {currentPage !== 1 && <span className=\"pagination__arrow\" onClick={() => paginate(prev => prev - 1)}>◀</span>} \r\n                {pageNumbers.map(number => (\r\n                    <span key={number} className=\"pagination__index\" onClick={() => paginate(number)}>{number}</span>\r\n                ))}\r\n                {currentPage !== lastPageNumber && <span className=\"pagination__arrow\" onClick={() => paginate(prev => prev + 1)}>▶</span>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddMyPlace from \"./AddMyPlace\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst List = ({places, localArray, isMobile}) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [type, setType] = useState(\"전체\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(5);\r\n    const onChange = (event) => {\r\n        const {target : {value} } = event;\r\n        setValue(value);\r\n    }\r\n    const onTypeChange = (event) => {\r\n        const {target : { value } } = event;\r\n        setType(value)\r\n    }\r\n    const onPostsPerPage = (event) => {\r\n        const {target : { value }} = event;\r\n        setPostsPerPage(value);\r\n    }\r\n\r\n    const indexOfLast = currentPage * postsPerPage;\r\n    const indexOfFirst = indexOfLast - postsPerPage;\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(indexOfFirst, indexOfLast);\r\n        return currentPosts;\r\n    }\r\n\r\n    return (\r\n        <div className=\"list__container\">\r\n            <div className=\"list__title\">자세히 알고싶다면 장소명을 클릭해주세요.</div>\r\n            <table className=\"list__table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>이름</th>\r\n                    <th>주소</th>\r\n                    {!isMobile && <th>설명</th>}\r\n                    {/* <th>추가</th> */}\r\n                </tr>\r\n            </thead>\r\n            {currentPosts(places).filter(place=>{return (place.type === type | type === \"전체\")}).map((place, index) => {\r\n                return (\r\n                    <tbody key={index}>\r\n                        {place.name.includes(value) | place.addressDetail.includes(value) | place.description.includes(value)\r\n                        ? (<tr style={localArray === null \r\n                                ? (\r\n                                    {backgroundColor:\"white\"}\r\n                                ) : (\r\n                                    localArray.some(localPlace => localPlace.name === place.name)\r\n                                    ? {backgroundColor:\"wheat\"}\r\n                                    : {backgroundColor:\"white\"}\r\n                                )}>\r\n                                <td className=\"list__table-name list__table-content\">\r\n                                    <Link to={{\r\n                                        pathname: \"/detail\",\r\n                                        state: {\r\n                                            from: \"목록\",\r\n                                            place\r\n                                        }\r\n                                    }}>\r\n                                    {place.name}\r\n                                    </Link>\r\n                                </td>\r\n                                <td list__table-content>{place.addressDetail}</td>\r\n                                {!isMobile && <td>{place.description}</td>}\r\n                                {/* <td><AddMyPlace place={place}/></td> */}\r\n                            </tr>\r\n                        ) : (null)\r\n                        }\r\n                    </tbody>\r\n                )\r\n            })}\r\n            </table>\r\n            <Pagination postsPerPage={postsPerPage} totalPosts={places.length} currentPage={currentPage} paginate={setCurrentPage} />\r\n            <div className=\"list-search__container\">\r\n                {!isMobile && <select className=\"list-saerch__pnum\" onChange={onPostsPerPage} defaultValue=\"10\">\r\n                    <option value=\"5\">5개씩 보기</option>\r\n                    <option value=\"10\">10개씩 보기</option>\r\n                    <option value=\"15\">15개씩 보기</option>\r\n                </select>}\r\n                <select className=\"place-type__list\" name=\"input__place-type\" onChange={onTypeChange} >\r\n                        <option value=\"전체\">전체</option>\r\n                        <option value=\"맛집\">맛집</option>\r\n                        <option value=\"카페 & 베이커리\">카페 & 베이커리</option>\\\r\n                        <option value=\"풍경\">풍경</option>\r\n                        <option value=\"술집\">술집</option>\r\n                        <option value=\"숙소\">숙소</option>\r\n                        <option value=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</option>\r\n                </select>\r\n                <input className=\"list-search__input\" type=\"text\" onChange={onChange} value={value} placeholder=\"장소명, 주소, 설명...\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import { faLocationArrow, faMousePointer } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* global kakao */\r\n\r\nconst Map = ({places, isMobile, setDetail}) => {\r\n    const [type, setType] = useState(\"전체\");\r\n    const [mouseState, setMouseState] = useState(false);\r\n    const [currentPlace, setCurrentPlace] = useState({});\r\n    const container = useRef(null);\r\n    let map = {};\r\n\r\n    const clickHandler = (place) => {\r\n        return function () {\r\n            setDetail(place)\r\n        }\r\n    }\r\n\r\n    const clickMobileHandler = (map, overlay, place) => {\r\n        return function () {\r\n            overlay.setMap(map);\r\n            setCurrentPlace(place)\r\n            setMouseState(true)\r\n        }\r\n    }\r\n\r\n    const removeOverlay = (overlay) => {\r\n        return function () {\r\n            overlay.setMap(null)\r\n            setMouseState(false)\r\n        }\r\n    }\r\n\r\n    const mouseOverHandler = (map, overlay) => {\r\n        return function () {\r\n            overlay.setMap(map);\r\n            setMouseState(true)\r\n        }\r\n    };\r\n\r\n    const mouseOutHandler = (overlay) => {\r\n        return function () {\r\n            overlay.setMap(null)\r\n            setMouseState(false)\r\n        }\r\n    };\r\n\r\n    const makeMarker = (place) => {\r\n        const content = document.createElement('div');\r\n        content.className = 'place__infowindow';\r\n        content.innerHTML = `${place.name}`;\r\n\r\n        const position = new kakao.maps.LatLng(place.geocode[0], place.geocode[1])\r\n        const overlay = new kakao.maps.CustomOverlay({\r\n            content,\r\n            position,\r\n            yAnchor: 2.5,\r\n            clickable: true,\r\n        })\r\n\r\n        let imageIconLocation = \"\"\r\n\r\n        if (place.type === \"맛집\") {\r\n            imageIconLocation = 'https://cdn.jsdelivr.net/gh/vangona/jeju-guide@main/src/img/restaurant.png'\r\n        } else if (place.type === \"카페 & 베이커리\") {\r\n            imageIconLocation = 'https://cdn.jsdelivr.net/gh/vangona/jeju-guide@main/src/img/cafe.png'\r\n        } else if (place.type === \"숙소\") {\r\n            imageIconLocation = ''\r\n        } else if (place.type === \"술집\") {\r\n            imageIconLocation = 'https://cdn.jsdelivr.net/gh/vangona/jeju-guide@main/src/img/drink.png'\r\n        } else if (place.type === \"풍경\") {\r\n            imageIconLocation = 'https://cdn.jsdelivr.net/gh/vangona/jeju-guide@main/src/img/landscape.png'\r\n        } else {\r\n            imageIconLocation = 'https://cdn.jsdelivr.net/gh/vangona/jeju-guide@main/src/img/basic.png'\r\n        }\r\n\r\n        const imageSrc = imageIconLocation,\r\n        imageSize = new kakao.maps.Size(35, 35),\r\n        imageOption = {offset: new kakao.maps.Point(17.5, 35)};    \r\n\r\n      \r\n        const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\r\n \r\n\r\n\r\n        const marker = new kakao.maps.Marker({\r\n            map: map,\r\n            image: markerImage,\r\n            position\r\n        });\r\n\r\n        if (isMobile) {\r\n            kakao.maps.event.addListener(marker, 'click', clickMobileHandler(map, overlay, place));\r\n            kakao.maps.event.addListener(map, \"click\", removeOverlay(overlay))\r\n        } else {\r\n            kakao.maps.event.addListener(marker, 'click', clickHandler(place));\r\n            kakao.maps.event.addListener(marker, 'mouseover', mouseOverHandler(map, overlay));\r\n            kakao.maps.event.addListener(marker, 'mouseout', mouseOutHandler(overlay));\r\n        }\r\n    }\r\n\r\n    const makeMap = () => {\r\n        let level = 10;\r\n        if (isMobile) {\r\n            level = 11\r\n        }\r\n        const options = {\r\n            center: new kakao.maps.LatLng(33.3717, 126.5602), //지도의 중심좌표.\r\n            level\r\n        }\r\n        map = new window.kakao.maps.Map(container.current, options);\r\n    }\r\n\r\n    const onTypeChange = (event) => {\r\n        const {target : { value } } = event;\r\n        setType(value)\r\n    }\r\n\r\n    const onClickLocation = () => {\r\n        const displayMarker = (locPosition) => {\r\n            const imageSrc = 'https://cdn.jsdelivr.net/gh/vangona/jeju-guide@main/src/img/tourist.png',\r\n                imageSize = new kakao.maps.Size(25, 25),\r\n                imageOption = {offset: new kakao.maps.Point(12.5, 25)};    \r\n\r\n            const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\r\n\r\n            const marker = new kakao.maps.Marker({\r\n                map: map,\r\n                image: markerImage,\r\n                position: locPosition\r\n            })\r\n        }\r\n        if (navigator.geolocation) {\r\n    \r\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                \r\n                var lat = position.coords.latitude, // 위도\r\n                    lon = position.coords.longitude; // 경도\r\n                \r\n                var locPosition = new kakao.maps.LatLng(lat, lon) // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n                \r\n                // 마커와 인포윈도우를 표시합니다\r\n                displayMarker(locPosition);\r\n                    \r\n              });\r\n            \r\n        } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n            \r\n            alert(\"위치 정보를 이용할 수 없습니다.\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        makeMap();\r\n        places.map(place => {\r\n            if(type === \"전체\" || place.type === type) {\r\n                makeMarker(place)\r\n            }\r\n        })\r\n    }, [type]);\r\n    return (\r\n        <>\r\n            <div className=\"map__container\">\r\n                <div className=\"vertical\">\r\n                    <select className=\"place-type__map\" name=\"input__place-type\" onChange={onTypeChange} >\r\n                            <option value=\"전체\">전체</option>\r\n                            <option value=\"맛집\">맛집</option>\r\n                            <option value=\"카페 & 베이커리\">카페 & 베이커리</option>\\\r\n                            <option value=\"풍경\">풍경</option>\r\n                            <option value=\"술집\">술집</option>\r\n                            <option value=\"숙소\">숙소</option>\r\n                            <option value=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</option>\r\n                        </select>\r\n                    <div>\r\n                        <button className=\"check-geolocation\" onClick={onClickLocation}><FontAwesomeIcon icon={faLocationArrow} /> 현재 위치 표시하기</button>\r\n                    </div>\r\n                    <div className=\"map\" ref={container} ></div>\r\n                    <div className=\"map-explain__container\">{mouseState \r\n                    ? isMobile \r\n                    ? \r\n                    <Link to={{\r\n                        pathname: \"/detail\",\r\n                        state: {\r\n                            from: \"지도\",\r\n                            place: currentPlace\r\n                        }\r\n                    }}>\r\n                    <div className=\"marker__detail\">\r\n                        <h4>{currentPlace.name} <FontAwesomeIcon icon={faMousePointer} size=\"sm\"/></h4>\r\n                        <hr/>\r\n                        <p>{currentPlace.description.slice(0, 50)}{currentPlace.description.length > 50 && \"...\"}</p>\r\n                    </div> \r\n                    </Link>\r\n                    : <div className=\"map-explain explain-box\">\r\n                        <span>더 알아보시려면 마커를 클릭해주세요.</span> <br />\r\n                        <Link to=\"/tips\"><div className=\"map-explain__tips\">장기여행자가 알려주는 HONEY TIPS</div></Link>\r\n                    </div> \r\n                    : <div className=\"map-explain explain-box\">\r\n                        <span>지도를 확대하실 수 있습니다.</span> <br />\r\n                        <Link to=\"/tips\"><div className=\"map-explain__tips\">장기여행자가 알려주는 HONEY TIPS</div></Link>\r\n                     </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Map;","import { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport List from \"components/List\";\r\nimport Map from \"components/Map\";\r\nimport { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst Home = ({ isMobile }) => {\r\n    const location = useLocation();\r\n    const [detail, setDetail] = useState(null);\r\n    const [imgPage, setImgPage] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [places, setPlaces] = useState([]);\r\n    const [viewType, setViewType] = useState(\"지도\");\r\n    const localArray = JSON.parse(localStorage.getItem(\"micheltain_myplace\"))\r\n\r\n    const clickNextImg = () => {\r\n        if (imgPage < 4) {\r\n            setImgPage(prev => prev + 1);\r\n        }\r\n    }\r\n\r\n    const clickPrevImg = () => {\r\n        if (imgPage > 0) {\r\n            setImgPage(prev => prev - 1);\r\n        }\r\n    }\r\n\r\n    const getPlaces = async () => {\r\n        await dbService.collection(\"places\").onSnapshot(snapshot => {\r\n            const placeArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setPlaces(placeArray);\r\n            setLoading(true);\r\n        })\r\n    }\r\n    const onClickMap = () => {\r\n        if (viewType === \"목록\") {\r\n            setViewType(\"지도\")\r\n        } else if (viewType === \"지도\") {\r\n            setViewType(\"목록\")\r\n        }\r\n    }\r\n\r\n    const onClickClear = () => {\r\n        setDetail(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlaces();\r\n        if (location.state !== undefined) {\r\n            setViewType(location.state.prevViewType)\r\n        } \r\n    }, [])\r\n    return (\r\n        <div className=\"home__container\">\r\n            <div className=\"vertical\">\r\n                <h3 className=\"home__title\">MICHETAIN GUIDE</h3>\r\n                <button className=\"home-viewtype\" onClick={onClickMap}><FontAwesomeIcon icon={faExchangeAlt} /> {viewType === \"지도\" ? \"리스트로 보기\" : \"지도로 보기\"}</button>   \r\n                {loading === true & viewType === \"지도\" \r\n                ? <Map places={places} localArray={localArray} isMobile={isMobile} setDetail={setDetail}/>\r\n                : (loading === true & viewType === \"목록\"\r\n                    ? <List places={places} localArray={localArray} isMobile={isMobile}/>\r\n                    : \"Loading...\"\r\n                )\r\n                }\r\n            </div>\r\n            {detail && (\r\n                <div className=\"map-detail__container\"> \r\n                    <div className=\"map__detail vertical\">\r\n                        <h3>{detail.name}</h3>\r\n                        {detail.attachmentUrlArray[0] && (\r\n                            <>\r\n                                <img className=\"map-detail__img\" src={detail.attachmentUrlArray[0]} alt=\"detail-img\" width=\"100%\" height=\"auto\"/>\r\n                                {/* <div className=\"map-detail__img-btn__container\">\r\n                                    {imgPage !== 0 && <button className=\"map-detail__img-btn prev\" onClick={clickPrevImg}>◀</button>}\r\n                                    {imgPage !== detail.attachmentUrlArray.length -1 & detail.attachmentUrlArray.lenth !== 1 ? <button className=\"map-detail__img-btn next\" onClick={clickNextImg}>▶</button> : null}\r\n                                </div> */}\r\n                            </>\r\n                        )}\r\n                        <Link to={{\r\n                                    pathname: \"/detail\",\r\n                                    state: {\r\n                                        from: \"지도\",\r\n                                        place: detail\r\n                                    }\r\n                                }}>\r\n                        <div className=\"map-detail__description\">{detail.description.length > 100 ? detail.description.slice(0, 100) + \"...\" : detail.description}</div>\r\n                        </Link>\r\n                        <div>\r\n                        {detail.url !== \"\" && <a href={detail.url} target=\"_blank\" rel=\"noreferrer\"><button className=\"map-detail__url map-detail__btn\">관련 사이트</button></a>}\r\n                        <Link to={{\r\n                                    pathname: \"/detail\",\r\n                                    state: {\r\n                                        from: \"지도\",\r\n                                        place: detail\r\n                                    }\r\n                                }}>\r\n                        <button className=\"map-detail__detail map-detail__btn\">더 알아보기</button>\r\n                        </Link>\r\n                        </div>\r\n                        {/* <AddMyPlace place={detail}/> */}\r\n                        <div className=\"map__detail-clear\" onClick={onClickClear}>❌</div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {/* <Link to=\"/myplace\"><button>내 여행지 목록</button></Link> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import imageCompression from \"browser-image-compression\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\n/* global kakao */\r\n\r\nconst PostForm = ({userObj}) => {\r\n    const [name, setName] = useState('');\r\n    const [extraAddress, setExtraAddress] = useState(''); \r\n    const [geocode, setGeocode] = useState([]);\r\n    const [type, setType] = useState('카페 & 베이커리');\r\n    const [description, setDescription] = useState('');\r\n    const [attachmentArray, setAttachmentArray] = useState([]);\r\n    const [url, setUrl] = useState('');\r\n\r\n    const [address, setAddress] = useState(\"\");\r\n    const [addressDetail, setAddressDetail] = useState(\"\");\r\n    const [isOpenPost, setIsOpenPost] = useState(false);\r\n\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrlArray = [];\r\n        if (attachmentArray !== []) {\r\n            for (let i = 0; i < attachmentArray.length; i++) {\r\n                const attachmentRef = storageService.ref().child(`${userObj.uid}/${name}/${uuidv4()}`)\r\n                const response = await attachmentRef.putString(attachmentArray[i], \"data_url\")\r\n                attachmentUrlArray.push(await response.ref.getDownloadURL());\r\n            }\r\n        }\r\n\r\n        const placeObj = {\r\n            name,\r\n            addressDetail,\r\n            address,\r\n            extraAddress,\r\n            geocode,\r\n            type,\r\n            description,\r\n            attachmentUrlArray,\r\n            url,\r\n            creatorId: userObj.uid\r\n        }\r\n        await dbService.collection(\"places\").add(placeObj)\r\n        setName('');\r\n        setAddress('');\r\n        setAddressDetail('');\r\n        setExtraAddress('');\r\n        setGeocode([]);\r\n        setType('');\r\n        setDescription('');\r\n        setAttachmentArray([]);\r\n        setUrl('');\r\n    }\r\n\r\n    const onNameChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setName(value);\r\n    }\r\n\r\n    const onExtraAddressChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setExtraAddress(value);\r\n    }\r\n    \r\n    const onTypeChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setType(value);\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setDescription(value);\r\n    }\r\n\r\n    const onAttachmentChange = async (event) => {\r\n        const {target: { files }} = event;\r\n        const fileArray = files;\r\n        if (fileArray.length < 6) {\r\n            const options = {\r\n                maxSizeMB: 1,\r\n                maxWidthOrHeight: 1024,\r\n            }\r\n            try {\r\n                let resultArray = [];\r\n                for (let i = 0; i < fileArray.length; i++) {\r\n                    const compressedFile = await imageCompression(fileArray[i], options)\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(compressedFile);\r\n                    reader.onloadend = (finishedEvent) => {\r\n                        const {currentTarget : {result}} = finishedEvent\r\n                        resultArray.push(result)\r\n                    }\r\n                }\r\n                setAttachmentArray(resultArray);\r\n                // const theFile = files[0];\r\n                // const compressedFile = await imageCompression(theFile, options)\r\n                // const reader = new FileReader();\r\n                // reader.readAsDataURL(compressedFile);\r\n                // reader.onloadend = (finishedEvent) => {\r\n                //     const {currentTarget: {result}} = finishedEvent\r\n                //     setAttachment(result)\r\n                // }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } else {\r\n            alert('사진은 5장까지입니다.')\r\n        }\r\n    }\r\n\r\n    const onUrlChange = (event) => {\r\n        const { target: {value} } = event;\r\n        setUrl(value);\r\n    }\r\n\r\n    const onChangeOpenPost = (event) => {\r\n        event.preventDefault();\r\n        setIsOpenPost(!isOpenPost);\r\n    };\r\n    \r\n    const makeGeocode = (result, status) => {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n            const geocodeArray = [result[0].y, result[0].x]\r\n            setGeocode(geocodeArray)\r\n        }\r\n    }\r\n\r\n    const onCompletePost = async (data) => {\r\n        let fullAddr = data.address;\r\n        let extraAddr = '';\r\n    \r\n        if (data.addressType === 'R') {\r\n            if (data.bname !== '') {\r\n                extraAddr += data.bname;\r\n            }\r\n            if (data.buildingName !== '') {\r\n                extraAddr += (extraAddr !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n            }\r\n            fullAddr += (extraAddr !== '' ? ` (${extraAddr})` : '');\r\n        }\r\n    \r\n        setAddress(data.zonecode);\r\n        setAddressDetail(fullAddr);\r\n    \r\n        await geocoder.addressSearch(addressDetail, makeGeocode)\r\n\r\n        setIsOpenPost(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"post-form__container\" onSubmit={onSubmit}>\r\n            <div className=\"post-form__content\">               \r\n                <label htmlFor=\"place-name\">장소 이름 : </label>\r\n                <input type=\"text\" name=\"place-name\" onChange={onNameChange} value={name} required/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">  \r\n                <div className=\"address-input\">\r\n                    { isOpenPost && <DaumPostcode autoClose onComplete={onCompletePost} /> }\r\n                    <button onClick={onChangeOpenPost}>주소 입력(지번)</button>\r\n                </div>\r\n                <div className=\"address-content__container\">\r\n                    <label htmlFor=\"place-address\">주소 : </label>\r\n                    <input className=\"place-address\" type=\"text\" name=\"place-address\" value={addressDetail} readOnly required/>\r\n                    <input className=\"place-address-number\" type=\"text\" name=\"place-address-number\" value={address} readOnly required/>\r\n                </div>         \r\n                <div className=\"address-content__container\">\r\n                    <label htmlFor=\"place-address\">나머지 주소 : </label>\r\n                    <input type=\"text\" name=\"place-extra-address\" onChange={onExtraAddressChange} value={extraAddress}/>  \r\n                </div>  \r\n                <input className=\"place-geocode\" type=\"text\" name=\"place-geocode\" readOnly value={geocode} required />\r\n            </div>     \r\n            <div className=\"post-form__content vertical\">         \r\n                <label htmlFor=\"place-type\">장소 종류</label>\r\n                <select name=\"place-type\" required onChange={onTypeChange} >\r\n                    <option value=\"맛집\">맛집</option>\r\n                    <option value=\"카페 & 베이커리\">카페 & 베이커리</option>\\\r\n                    <option value=\"풍경\">풍경</option>\r\n                    <option value=\"술집\">술집</option>\r\n                    <option value=\"숙소\">숙소</option>\r\n                    <option value=\"그 외 가볼만한 곳\">그 외 가볼만한 곳</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-description\">장소 설명</label>\r\n                <textarea className=\"place-description\" name=\"place-description\" placeholder=\"설명\" onChange={onDescriptionChange} value={description} required/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-img\">장소 사진(필수 X)</label>\r\n                <input type=\"file\" accept=\"image/*\" name=\"place-img\" onChange={onAttachmentChange} multiple/>\r\n            </div>\r\n            <div className=\"post-form__content vertical\">               \r\n                <label htmlFor=\"place-description\">참고 사이트 주소(있다면)</label>\r\n                <input type=\"url\" nmae=\"place-url\" placeholder=\"사이트 주소\" onChange={onUrlChange}  value={url}/>\r\n            </div>\r\n            <input type=\"submit\" value=\"등록하기\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PostForm;","import PostForm from \"components/PostForm\";\r\nimport { authService } from \"fBase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Post = ({userObj}) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\")\r\n    }\r\n    const onHomeClick = () => {\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <div className=\"post__container\">\r\n            <PostForm userObj={userObj}/>\r\n            <button onClick={onHomeClick}>Home</button>\r\n            <button onClick={onLogOutClick}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import { faFacebook, faGithub, faInstagram } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport ScriptTag from \"react-script-tag\"\r\n\r\nconst Tips = () => {\r\n    const history = useHistory();\r\n\r\n    const clickBackBtn = () => {\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <div className=\"detail__container\">\r\n            <div className=\"detail-box tips-box\" style={{maxHeight:\"90vh\"}}>\r\n                <h5>장기여행자 들려주는 꿀팁들</h5>\r\n                <ul className=\"tips__list\">\r\n                    <li>꿀팁 1. 제주도에는 실시간 버스 정보 시스템이 별도로 존재한다. 뚜벅이라면 꼭 참고하도록 하자. <br/> <a href=\"http://bus.jeju.go.kr/\">버스 정보 시스템 바로가기</a></li>\r\n                    <li>꿀팁 2. 제주도에는 공항에서 숙소, 숙소에서 숙소, 숙소에서 공항 등 들고 돌아다니기 부담스러울 수 있는 짐을 옮겨주는 '짐 옮기기 서비스'가 아주 잘되어있다. 뚜벅이는 적극 이용해보자.</li>\r\n                    <li>꿀팁 3. 제주도에서 제대로 걸어보고 싶다면 올레길을 적극 이용해보자. 이용해본 후기는 '굳이 저기를 걸어봐야해?' 라고 지나가려던 숨은 명소를 다 보내버린다.</li>                    \r\n                    <li>꿀팁 4. 개인적으로 용눈이오름을 제외하고, 노을은 서쪽이 예뻤다. 해는 서쪽으로 지기 때문일까</li>\r\n                    <li>꿀팁 5. 로컬들이 뽑는 가장 좋은 제주도의 계절은 가을이다. 사람도 적당히 없고, 정말 예쁘다.</li>\r\n                    <li>꿀팁 6. 제주도는 어딘가에서 상처받은 사람이 많이 모인다. 그렇기에 정성을 담은 서비스가 많았다. 여기에 모여있는 맛집과 서비스들은 주로 그런 곳을 선정했다. 당신의 그런 공간도 찾아보면 좋겠다.</li>\r\n                </ul>\r\n                <div className=\"maker-int\">\r\n                    <h5 style={{textAlign:\"center\"}}>만든이 소개</h5>\r\n                    <h6 className=\"maker-int__name\">1. 장기여행자 : 김관경</h6>\r\n                    <ul style={{fontSize:\"0.8rem\"}}>\r\n                        <li>\r\n                        - 제주도를 7개월간 여행하였다.\r\n                        </li>\r\n                        <li>\r\n                        - 뚜벅초와 개발을 맡고있다.\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"maker-icons__container\">\r\n                        <span className=\"maker-icons\">\r\n                            <a href=\"https://www.instagram.com/van_gona_/\" target=\"_blank\"><FontAwesomeIcon icon={faInstagram} size=\"2x\" color=\"white\"/></a>\r\n                            <a href=\"https://www.facebook.com/gonavankim\" target=\"_blank\"><FontAwesomeIcon icon={faFacebook} size=\"2x\" color=\"white\"/></a>\r\n                            <a href=\"https://github.com/vangona/\" target=\"_blank\"><FontAwesomeIcon icon={faGithub} size=\"2x\" color=\"white\"/></a>\r\n                        </span>\r\n                    </div>\r\n                    <h6 className=\"maker-int__name\">2. 제주살이꾼 : 박태훈</h6>\r\n                    <p style={{fontSize:\"0.8rem\"}}>\r\n                        <li>\r\n                        - 제주도에 3년간 살고 있다.\r\n                        </li>\r\n                        <li>\r\n                        - 제주도 숨은 맛집과 명소 탐방, 미슐탱 가이드 이름의 어원을 맡고있다.    \r\n                        </li>\r\n                        <li>\r\n                        - SUPER DRIVER    \r\n                        </li>\r\n                    </p>\r\n                    <div className=\"maker-icons__container\">\r\n                    <span className=\"maker-icons\">\r\n                    <a href=\"https://www.instagram.com/van_gona_/\" target=\"_blank\"><FontAwesomeIcon icon={faInstagram} size=\"2x\" color=\"white\"/></a>\r\n                    </span>\r\n                    </div>\r\n                    <h5>도와주신 분들 & 저작권 표시</h5>\r\n                    <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n                    <div>Icons made by <a href=\"\" title=\"iconixar\">iconixar</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n                    <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n                </div>\r\n                <ins\r\n                    className=\"kakao_ad_area\"\r\n                    style={{display:\"none\"}}\r\n                    data-ad-unit=\"DAN-c9rNVYJ0iiSwi4Sm\"\r\n                    data-ad-width=\"320\"\r\n                    data-ad-height=\"50\"\r\n                    ></ins>\r\n                <button style={{marginTop:\"1rem\"}} onClick={clickBackBtn}>돌아가기</button>\r\n            </div>\r\n            <span className=\"copyright\">&copy; 2021, 나만의 서랍장 Co. all rights reserved.</span>\r\n            <ScriptTag type=\"text/javascript\"\r\n                    src=\"//t1.daumcdn.net/kas/static/ba.min.js\" \r\n                    async >\r\n            </ScriptTag>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tips;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Detail from \"routes/Detail\";\r\nimport Edit from \"routes/Edit\";\r\nimport Home from \"routes/Home\";\r\nimport MyPlace from \"routes/MyPlace\";\r\nimport Post from \"routes/Post\";\r\nimport Tips from \"routes/Tips\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, isMobile }) => {\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    {isLoggedIn \r\n                        ? (             \r\n                            <Route exact path=\"/post\">\r\n                                <Post userObj={userObj}/>\r\n                            </Route>\r\n                        ) : (    \r\n                            <Route exact path=\"/post\">\r\n                                <Auth />\r\n                            </Route>\r\n                        )\r\n                    }\r\n                    {isLoggedIn \r\n                        ? (\r\n                            <Route exact path=\"/edit\">\r\n                                <Edit />\r\n                            </Route>\r\n                        ) : (\r\n                            <Route exact path=\"/edit\">\r\n                                <Auth />\r\n                            </Route>\r\n                        )\r\n                    }\r\n                    <Route exact path=\"/\">\r\n                        <Home isMobile={isMobile}/>\r\n                    </Route>\r\n                    <Route exact path=\"/detail\">\r\n                        <Detail />\r\n                    </Route>\r\n                    <Route exact path=\"/tips\">\r\n                        <Tips />\r\n                    </Route>\r\n                    {/* <Route exact path=\"/myplace\">\r\n                        <MyPlace />\r\n                    </Route> */}\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\"\nimport {authService} from \"fBase\"\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const userAgent = navigator.userAgent;\n  const checkIsMobile = () => {\n    if (userAgent.match(/iPhone|iPod|Android|Windows CE|BlackBerry|Symbian|Windows Phone|webOS|Opera Mini|Opera Mobi|POLARIS|IEMobile|lgtelecom|nokia|SonyEricsson/i) != null || userAgent.match(/LG|SAMSUNG|Samsung/) != null){\n      setIsMobile(true)\n      } else{\n      setIsMobile(false)\n    }\n  }\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          uid:user.uid, \n        });\n      } else {\n        setUserObj(null);\n      }\n      checkIsMobile();\n      setInit(true)\n    })\n  }, [])\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={ userObj } isMobile={isMobile} /> : \"Loading...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}